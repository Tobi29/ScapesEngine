/*
 * Copyright 2012-2018 Tobi29
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    def kotlinVersion = "1.3.11"
    def dokkaVersion = "0.9.17"
    def bintrayVersion = "1.8.4"

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayVersion"
    }
}

apply from: rootProject.file("gradle/build-gitlab.gradle")

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/spekframework/spek-dev"
        }
        maven {
            url "https://maven-eclipse.github.io/maven"
        }
        maven {
            url "https://dl.bintray.com/gitout/scapes-engine"
        }
        maven {
            url "https://jitpack.io"
        }
    }

    afterEvaluate {
        def kotlin = extensions.findByName("kotlin")
        if (kotlin != null) {
            kotlin.sourceSets.each { sourceSet ->
                sourceSet.languageSettings {
                    useExperimentalAnnotation "kotlin.Experimental"
                }
            }
        }

        tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJsCompile) {
            compileTask ->
                compileTask.kotlinOptions.metaInfo = true
                compileTask.kotlinOptions.sourceMap = true
                compileTask.kotlinOptions.sourceMapEmbedSources = "always"
                compileTask.kotlinOptions.moduleKind = "umd"
        }
    }
}

ext {
    kotlinVersion = "1.3.11"
    kotlinBase = { module -> "org.jetbrains.kotlin:$module:$kotlinVersion" }
    kotlin = { module -> kotlinBase("$module-common") }
    kotlinJVM = { module -> kotlinBase("$module") }
    kotlinJS = { module -> kotlinBase("$module-js") }

    kotlinxCoroutinesVersion = "1.1.0"
    kotlinxCoroutinesBase = { module ->
        "org.jetbrains.kotlinx:$module:$kotlinxCoroutinesVersion"
    }
    kotlinxCoroutines = { module -> kotlinxCoroutinesBase("$module-common") }
    kotlinxCoroutinesJVM = { module -> kotlinxCoroutinesBase("$module") }
    kotlinxCoroutinesJS = { module -> kotlinxCoroutinesBase("$module-js") }

    slf4jVersion = "1.7.25"
    slf4jJVM = { module -> "org.slf4j:$module:$slf4jVersion" }

    spekVersion = "2.0.0-alpha.1"
    spekBase = { module -> "org.spekframework.spek2:$module:$spekVersion" }
    spek = { module -> spekBase("$module-common") }
    spekJVM = { module -> spekBase("$module-jvm") }

    lwjglVersion = "3.2.0"
    lwjglJVM = { module -> "org.lwjgl:$module:$lwjglVersion" }

    ktBindingsVersion = "79a5bb3be27486855128d6c88137cbd21e36ef5f"
    ktBindingsBase = { module -> "net.gitout.kt-bindings:$module:$ktBindingsVersion" }
    ktBindings = { module -> ktBindingsBase("$module-metadata") }
    ktBindingsJS = { module -> ktBindingsBase("$module-js") }
    ktBindingsJVMLWJGL3 = { module -> ktBindingsBase("$module-jvm-lwjgl3") }

    junitJupiterVersion = "5.2.0"
    junitJupiterJVM =
            { module -> "org.junit.jupiter:$module:$junitJupiterVersion" }

    swtVersion = "4.6"
    swtWindows32 = "org.eclipse.swt:org.eclipse.swt.win32.win32.x86:$swtVersion"

    antlrVersion = "4.7.1"
    antlrJVM = { module -> "org.antlr:$module:$antlrVersion" }

    mariaDBJavaClientVersion = "1.7.4"
    mariaDBJavaClientJVM =
            { module -> "org.mariadb.jdbc:$module:$mariaDBJavaClientVersion" }

    sqliteJDBCVersion = "3.23.1"
    sqliteJDBCJVM = { module -> "org.xerial:$module:$sqliteJDBCVersion" }

    sqljetVersion = "1.1.11"
    sqljetJVM = { module -> "org.tmatesoft.sqljet:$module:$sqljetVersion" }

    jlayerVersion = "1.0.1"
    jlayerJVM = { module -> "javazoom:$module:$jlayerVersion" }

    concentusVersion = "fdf276ed6b"
    concentusJVM = { module ->
        "com.github.lostromb.concentus:$module:$concentusVersion"
    }

    jorbisVersion = "0.0.17"
    jorbisJVM = { module -> "org.jcraft:$module:$jorbisVersion" }
}
