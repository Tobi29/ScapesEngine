/*
 * Copyright 2012-2018 Tobi29
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


apply plugin: "maven-publish"
apply plugin: "java"
apply plugin: "antlr"
apply plugin: "idea"

sourceCompatibility = 1.7

configurations {
    sources
}

dependencies {
    compile rootProject.ext.antlrJVM("antlr4-runtime")

    antlr rootProject.ext.antlrJVM("antlr4")
}

configurations.compile.exclude group: "org.antlr", module: "antlr4"
configurations.runtime.exclude group: "org.antlr", module: "antlr4"

task sourcesJar(type: Jar) {
    classifier = "sources"
    dependsOn configurations.sources
    from {
        configurations.sources.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    sources sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

task antlrJS(type: AntlrTask) {
    def cmd = new ArrayList<String>()
    cmd.add("-Dlanguage=JavaScript")
    arguments = cmd
    source = sourceSets.main.antlr
    outputDirectory = file("$buildDir/js")
}

def cmd = new ArrayList<String>()
cmd.add("-package")
cmd.add("org.tobi29.scapes.engine.shader")
tasks.generateGrammarSource.arguments = cmd

task jsJar(type: Jar, dependsOn: antlrJS) {
    classifier = "js"
    from(tasks.antlrJS.outputDirectory) {
        into "lib"
    }
    from(file("js"))
}

artifacts {
    archives jsJar
}

idea {
    module {
        excludeDirs -= file("$buildDir")
    }
}
